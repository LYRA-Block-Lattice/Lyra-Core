@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/showbb"

<h1>Status of All Authorizer Nodes </h1>

@if (NodeState.Value.IsLoading)
{
    <p><em>Checking all nodes... This may take a while.</em></p>
}
@if (NodeState.Value.nodeStatus != null)
{
    <div>
    <table class="table">
        <thead>
            <tr>
                <th>Primary</th>
                <th>PoS Wallet</th>
                <th>IP Address</th>
                <th>Votes</th>
                <th>API Status</th>
                <th>Last Cons Block</th>
                <th>In Sync</th>
                <th>Version</th>
                <th>Status</th>
                <th>Total Block Count</th>
                <th>Last Float Hash</th>
                <th>Connected Peers</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var nodeInfo in NodeState.Value.RankedList)
            {
            <tr>
                <td>@nodeInfo.IsPrimary</td>
                <td><a href="/showblock/@nodeInfo.ID">@nodeInfo.ID.Substring(0, 10)...</a></td>
                <td>@NodeState.Value.bb.AllNodes.First(a => a.AccountID == nodeInfo.ID).IPAddress</td>
                <td>@nodeInfo.Votes</td>
                @if(nodeInfo.Status != null)
                    {
                <td>Connected OK.</td>
                        @if(nodeInfo.Status.LastConsolidationHash==null || nodeInfo.Status.LastConsolidationHash.Length < 11)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td><a href="/showblock/@nodeInfo.Status.LastConsolidationHash">@nodeInfo.Status.LastConsolidationHash.Substring(0, 10)...</a></td>
                        }
                <td>@nodeInfo.Status.SyncState</td>
                <td>@nodeInfo.Status.Status.version</td>
                <td>@nodeInfo.Status.Status.state</td>
                <td>@nodeInfo.Status.Status.totalBlockCount</td>
                        @if(nodeInfo.Status.Status.lastUnSolidationHash==null || nodeInfo.Status.Status.lastUnSolidationHash.Length < 11)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@nodeInfo.Status.Status.lastUnSolidationHash.Substring(0, 10)...</td>
                        }
                <td>@nodeInfo.Status.Status.connectedPeers</td>
                    }
                else
                {
                <td>Failed to connect</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                }
            </tr>
            }
        </tbody>
    </table>
    </div>
    <div style="font-family:verdana;font-size:70%;">
        <h5>Note:</h5>
        <ul>
            <li>The 4 seed nodes has votes of zero but were programmed to be primary authorizer.</li>
            <li>If API Status shows "Failed to connect" please check if tcp port 4505 is opened by the firewall.</li>
            <li>The minimal votes to become primary is 1,000,000 LYR. Ask TG channel admin to get the tokens.</li>
        </ul>
    </div>
}


