@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/webwallet"
@using Nebula.Store.WebWalletUseCase

<h1>Web Wallet for @LyraGlobal.PRODUCTNAME</h1>
<hr />
@if (walletState.Value.IsOpening && walletState.Value.stage == UIStage.Main)
{
   <div>
        <button class="btn btn-primary" @onclick="Refresh">
        Refresh Balance
    </button>
        <button class="btn btn-primary" @onclick="Send">
        Send
    </button>
    <button class="btn btn-primary" @onclick="Settings">
        Settings
    </button>
    <button class="btn btn-primary" @onclick="Transactions">
        Transactions
    </button>
    <button class="btn btn-primary" @onclick="CloseWallet">
        Close Wallet
    </button>
    </div>
    <hr />
    <div>
        <p>Your wallet's private key is: @walletState.Value.wallet.PrivateKey</p>
        <p>Your wallet's address is: <a href="/showblock/@walletState.Value.wallet.AccountId">@walletState.Value.wallet.AccountId</a></p>
        <p>Your wallet's balance is: @walletState.Value.wallet.GetDisplayBalances()</p>
        <p>Your are now voting for: @walletState.Value.wallet.VoteFor</p>
    </div>
    <div>
        <p style="color: red">Please save private key properly if you want to open this wallet again.</p>
    </div>
}
else if (walletState.Value.IsOpening && walletState.Value.stage == UIStage.Settings)
{
    <h3>Settings</h3>
        <div>
        <p>Vote For Address:</p>
        <input size="100" type="text" @bind="@voteAddr" />
        <hr />
        <button class="btn btn-primary" @onclick="SaveSettings">Save</button>
        <button class="btn btn-primary" @onclick="CancelSave">Cancel</button>
    </div>
}
else if (walletState.Value.IsOpening && walletState.Value.stage == UIStage.Send)
{
    <h3>Sending token</h3>
    <div>
        <p>Destination Wallet Address:<br />
        <input size="100" type="text" @bind="@dstAddr" /></p>
        <p>Token Name:<br />
        <input size="20" type="text" @bind="@tokenName" /></p>
        <p>Amount:<br />
        <input size="20" type="text" @bind="@amount" /></p>
        <hr />
        <button class="btn btn-primary" @onclick="SendToken">Send Token</button>
        <button class="btn btn-primary" @onclick="CancelSend">Cancel</button>
    </div>

}
else if (walletState.Value.IsOpening && walletState.Value.stage == UIStage.Transactions)
{
    <h3>Transactions</h3>
    <div>
        <button class="btn btn-primary" @onclick="Return">Return</button>
    </div>
    @if(walletState.Value.txs != null)
    {
        <pre>
        @foreach(var tx in walletState.Value.txs)
        {
            @tx <br />

        }
        </pre>
    <div>
        <button class="btn btn-primary" @onclick="Return">Return</button>
    </div>
    }
}
else if (walletState.Value.stage == UIStage.Entry)
{
    <div>
    <button class="btn btn-primary" @onclick="CreateWallet">
        Create New Wallet
    </button>
    </div>
    <hr />
    <div>
        <p>Private Key:</p>
        <input size="100" type="text" @bind="@prvKey" />
        <hr />
        <button class="btn btn-primary" @onclick="RestoreWallet">
            Restore Wallet
        </button>
    </div>

}